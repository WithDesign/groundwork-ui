////
/// Fallback IE Grid
/// @group class-creator
////

@include run-debug-start((framework, util, class-creators), '✪ Creator:Fallback IE Grid');

/// @name Fallback Grid Single Column
/// Creates a single fallback column
/// @param {key} - Breakpoint size
/// @outputs fallback grid classes within breakpoint

@mixin fallback-create-grid($size) {
  $col-label: breakpoint-col-str($size, $grid-columns);

  #{$col-label} {
    @include fallback-column-base();
  }

  .col-#{$size} {
    @include fallback-col();
  }

  // Creates basic grid system
  @for $i from 1 through $grid-columns {
    $column-full: $i / ($grid-columns);

    .col-#{$size}-#{$i} {
      width: percentage($column-full) + \9;
    }

    .col-#{$size}-offset-#{$i} {
      margin-left: percentage($column-full) + \9;
    }
  }
}

/// @name Fallback Grid
/// Creates the full fallback grid
/// @param {list} - list Breakpoint size
/// @outputs fallback grid classes within breakpoint

@mixin fallback-grid($col-size) {
  // Loops through creating classes for each breakpoint
  @each $col-size, $size in $col-size {
    // Runs through statment -- xs needs no breakpoint
    @if $col-size == xs {
      @include fallback-create-grid($col-size);
    } @else {
      // Breakpoint added for sm, md, lg, xl
      @include breakpoint($col-size) {
        @include fallback-create-grid($col-size);
      }
    }
  }
}

@include run-debug-end((framework, util, class-creators), '✪ Creator:Fallback IE Grid');
